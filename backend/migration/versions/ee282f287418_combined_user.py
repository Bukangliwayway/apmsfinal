"""combined user

Revision ID: ee282f287418
Revises: 6a8f2c359071
Create Date: 2023-09-19 14:50:51.299418

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ee282f287418'
down_revision: Union[str, None] = '6a8f2c359071'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('anonymous_feedbacks')
    op.drop_index('ix_alumni_id', table_name='alumni')
    op.drop_index('ix_alumni_student_number', table_name='alumni')
    op.drop_table('alumni')
    op.drop_constraint('alumni_certifications_alumni_id_fkey', 'alumni_certifications', type_='foreignkey')
    op.create_foreign_key(None, 'alumni_certifications', 'users', ['alumni_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('employment_alumni_id_fkey', 'employment', type_='foreignkey')
    op.create_foreign_key(None, 'employment', 'users', ['alumni_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('feedbacks_alumni_id_fkey', 'feedbacks', type_='foreignkey')
    op.create_foreign_key(None, 'feedbacks', 'users', ['alumni_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('special_skills_certifications_alumni_id_fkey', 'special_skills_certifications', type_='foreignkey')
    op.create_foreign_key(None, 'special_skills_certifications', 'users', ['alumni_id'], ['id'], ondelete='CASCADE')
    op.add_column('users', sa.Column('auth0_user_id', sa.String(), nullable=True))
    op.add_column('users', sa.Column('verified', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('student_number', sa.String(), nullable=True))
    op.add_column('users', sa.Column('birthdate', sa.Date(), nullable=True))
    op.add_column('users', sa.Column('middle_name', sa.String(), nullable=True))
    op.add_column('users', sa.Column('region', sa.String(), nullable=True))
    op.add_column('users', sa.Column('district', sa.String(), nullable=True))
    op.add_column('users', sa.Column('city', sa.String(), nullable=True))
    op.add_column('users', sa.Column('barangay', sa.String(), nullable=True))
    op.add_column('users', sa.Column('year_graduated', sa.Integer(), nullable=True))
    op.add_column('users', sa.Column('telephone_number', sa.String(), nullable=True))
    op.add_column('users', sa.Column('mobile_number', sa.String(), nullable=True))
    op.add_column('users', sa.Column('email_address', sa.String(), nullable=True))
    op.add_column('users', sa.Column('civil_status', sa.String(), nullable=True))
    op.add_column('users', sa.Column('sex', sa.String(), nullable=True))
    op.add_column('users', sa.Column('academic_program_id', sa.Integer(), nullable=True))
    op.add_column('users', sa.Column('civil_service_eligibility', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('present_employment_status', sa.String(), nullable=True))
    op.create_index(op.f('ix_users_student_number'), 'users', ['student_number'], unique=True)
    op.create_unique_constraint(None, 'users', ['auth0_user_id'])
    op.drop_column('users', 'is_alumni')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('is_alumni', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_index(op.f('ix_users_student_number'), table_name='users')
    op.drop_column('users', 'present_employment_status')
    op.drop_column('users', 'civil_service_eligibility')
    op.drop_column('users', 'academic_program_id')
    op.drop_column('users', 'sex')
    op.drop_column('users', 'civil_status')
    op.drop_column('users', 'email_address')
    op.drop_column('users', 'mobile_number')
    op.drop_column('users', 'telephone_number')
    op.drop_column('users', 'year_graduated')
    op.drop_column('users', 'barangay')
    op.drop_column('users', 'city')
    op.drop_column('users', 'district')
    op.drop_column('users', 'region')
    op.drop_column('users', 'middle_name')
    op.drop_column('users', 'birthdate')
    op.drop_column('users', 'student_number')
    op.drop_column('users', 'verified')
    op.drop_column('users', 'auth0_user_id')
    op.drop_constraint(None, 'special_skills_certifications', type_='foreignkey')
    op.create_foreign_key('special_skills_certifications_alumni_id_fkey', 'special_skills_certifications', 'alumni', ['alumni_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'feedbacks', type_='foreignkey')
    op.create_foreign_key('feedbacks_alumni_id_fkey', 'feedbacks', 'alumni', ['alumni_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'employment', type_='foreignkey')
    op.create_foreign_key('employment_alumni_id_fkey', 'employment', 'alumni', ['alumni_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'alumni_certifications', type_='foreignkey')
    op.create_foreign_key('alumni_certifications_alumni_id_fkey', 'alumni_certifications', 'alumni', ['alumni_id'], ['id'], ondelete='CASCADE')
    op.create_table('alumni',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('verified', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('student_number', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('birthdate', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('middle_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('region', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('district', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('city', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('barangay', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('year_graduated', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('telephone_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('mobile_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email_address', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('civil_status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('sex', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('academic_program_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('civil_service_eligibility', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('present_employment_status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['academic_program_id'], ['academic_programs.id'], name='alumni_academic_program_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='alumni_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='alumni_pkey'),
    sa.UniqueConstraint('user_id', name='alumni_user_id_key')
    )
    op.create_index('ix_alumni_student_number', 'alumni', ['student_number'], unique=False)
    op.create_index('ix_alumni_id', 'alumni', ['id'], unique=False)
    op.create_table('anonymous_feedbacks',
    sa.Column('area', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('star_rating', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('message', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='anonymous_feedbacks_pkey')
    )
    # ### end Alembic commands ###
