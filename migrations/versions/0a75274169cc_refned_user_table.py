"""Refined User table

Revision ID: 0a75274169cc
Revises: e3fdd1a8b252
Create Date: 2023-10-09 02:17:45.291702

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0a75274169cc'
down_revision: Union[str, None] = 'e3fdd1a8b252'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None
def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop tables with CASCADE using raw SQL queries
    op.execute('DROP TABLE IF EXISTS special_skills_certifications CASCADE')
    op.drop_index('ix_academic_programs_id', table_name='academic_programs')
    op.drop_index('ix_academic_programs_name', table_name='academic_programs')
    op.execute('DROP TABLE IF EXISTS academic_programs CASCADE')
    op.add_column('feedbacks', sa.Column('status', sa.String(), server_default='unapproved', nullable=True))
    op.add_column('users', sa.Column('degree', sa.String(), nullable=True))
    op.add_column('users', sa.Column('field', sa.String(), nullable=True))
    op.add_column('users', sa.Column('achievements_story', sa.Text(), nullable=True))
    op.add_column('users', sa.Column('honors_and_awards', postgresql.ARRAY(sa.String()), nullable=True))
    op.execute('ALTER TABLE users DROP CONSTRAINT IF EXISTS users_academic_program_id_fkey')
    op.drop_column('users', 'academic_program_id')
    # ### end Alembic commands ###

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('academic_program_id', postgresql.UUID(), autoincrement=False, nullable=True))
    op.create_foreign_key('users_academic_program_id_fkey', 'users', 'academic_programs', ['academic_program_id'], ['id'], ondelete='CASCADE')
    op.drop_column('users', 'honors_and_awards')
    op.drop_column('users', 'achievements_story')
    op.drop_column('users', 'field')
    op.drop_column('users', 'degree')
    op.drop_column('feedbacks', 'status')
    op.create_table('academic_programs',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='academic_programs_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_academic_programs_name', 'academic_programs', ['name'], unique=False)
    op.create_index('ix_academic_programs_id', 'academic_programs', ['id'], unique=False)
    op.create_table('special_skills_certifications',
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('file_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('file_url', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('user_id', postgresql.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='special_skills_certifications_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='special_skills_certifications_pkey')
    )
    # ### end Alembic commands ###
