"""Lol

Revision ID: 401d3453aa61
Revises: 863d7b3efa62
Create Date: 2024-01-17 11:00:45.797550

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '401d3453aa61'
down_revision: Union[str, None] = '863d7b3efa62'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('APMSClassification',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('Name', sa.String(), nullable=False),
    sa.Column('Code', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_APMSClassification_Code'), 'APMSClassification', ['Code'], unique=True)
    op.create_index(op.f('ix_APMSClassification_Name'), 'APMSClassification', ['Name'], unique=False)
    op.create_table('APMSJob',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('Name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_APMSJob_Name'), 'APMSJob', ['Name'], unique=False)
    op.create_table('APMSNationalCertification',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('Name', sa.String(), nullable=True),
    sa.Column('IssuingBody', sa.String(), nullable=True),
    sa.Column('Requirements', sa.Text(), nullable=True),
    sa.Column('LinkReference', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('APMSCourseClassification',
    sa.Column('CourseId', sa.Integer(), nullable=False),
    sa.Column('ClassificationId', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['ClassificationId'], ['APMSClassification.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['CourseId'], ['SPSCourse.CourseId'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('CourseId', 'ClassificationId')
    )
    op.create_table('APMSJobClassification',
    sa.Column('JobId', sa.UUID(), nullable=False),
    sa.Column('ClassificationId', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['ClassificationId'], ['APMSClassification.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['JobId'], ['APMSJob.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('JobId', 'ClassificationId')
    )
    op.create_table('APMSNationalCertificationClassification',
    sa.Column('NationalCertificationId', sa.UUID(), nullable=False),
    sa.Column('ClassificationId', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['ClassificationId'], ['APMSClassification.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['NationalCertificationId'], ['APMSNationalCertification.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('NationalCertificationId', 'ClassificationId')
    )
    op.create_table('APMSUser',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('Role', sa.String(), server_default='public', nullable=False),
    sa.Column('Sub', sa.String(), nullable=True),
    sa.Column('Password', sa.String(), nullable=False),
    sa.Column('ResetCode', sa.String(), nullable=True),
    sa.Column('IsCompleted', sa.Boolean(), server_default='False', nullable=False),
    sa.Column('ProfilePicture', sa.String(), server_default='#', nullable=True),
    sa.Column('Username', sa.String(), nullable=True),
    sa.Column('FirstName', sa.String(), nullable=True),
    sa.Column('LastName', sa.String(), nullable=True),
    sa.Column('StudentNumber', sa.String(), nullable=True),
    sa.Column('Birthdate', sa.Date(), nullable=True),
    sa.Column('CivilStatus', sa.String(), nullable=True),
    sa.Column('Gender', sa.String(), nullable=True),
    sa.Column('Headline', sa.Text(), nullable=True),
    sa.Column('MobileNumber', sa.String(), nullable=True),
    sa.Column('TelephoneNumber', sa.String(), nullable=True),
    sa.Column('Email', sa.String(), nullable=True),
    sa.Column('IsInternational', sa.Boolean(), server_default='False', nullable=False),
    sa.Column('Address', sa.String(), nullable=True),
    sa.Column('Country', sa.String(), server_default='philippines', nullable=True),
    sa.Column('Region', sa.String(), nullable=True),
    sa.Column('RegionCode', sa.String(), nullable=True),
    sa.Column('City', sa.String(), nullable=True),
    sa.Column('CityCode', sa.String(), nullable=True),
    sa.Column('Barangay', sa.String(), nullable=True),
    sa.Column('BarangayCode', sa.String(), nullable=True),
    sa.Column('OriginIsInternational', sa.Boolean(), server_default='False', nullable=False),
    sa.Column('OriginAddress', sa.String(), nullable=True),
    sa.Column('OriginCountry', sa.String(), server_default='philippines', nullable=True),
    sa.Column('OriginRegion', sa.String(), nullable=True),
    sa.Column('OriginCity', sa.String(), nullable=True),
    sa.Column('OriginBarangay', sa.String(), nullable=True),
    sa.Column('OriginRegionCode', sa.String(), nullable=True),
    sa.Column('OriginCityCode', sa.String(), nullable=True),
    sa.Column('OriginBarangayCode', sa.String(), nullable=True),
    sa.Column('DateGraduated', sa.Date(), nullable=True),
    sa.Column('BatchYear', sa.Integer(), nullable=True),
    sa.Column('PostGradAct', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('PresentEmploymentStatus', sa.String(), server_default='unanswered', nullable=True),
    sa.Column('UnemploymentReason', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('CourseId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['CourseId'], ['SPSCourse.CourseId'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_APMSUser_Email'), 'APMSUser', ['Email'], unique=True)
    op.create_index(op.f('ix_APMSUser_Role'), 'APMSUser', ['Role'], unique=False)
    op.create_index(op.f('ix_APMSUser_StudentNumber'), 'APMSUser', ['StudentNumber'], unique=True)
    op.create_index(op.f('ix_APMSUser_Sub'), 'APMSUser', ['Sub'], unique=True)
    op.create_index(op.f('ix_APMSUser_Username'), 'APMSUser', ['Username'], unique=True)
    op.create_table('APMSAchievement',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('UserId', sa.UUID(), nullable=True),
    sa.Column('NationalCertificationId', sa.UUID(), nullable=True),
    sa.Column('TypeOfAchievement', sa.String(), nullable=True),
    sa.Column('DateOfAttainment', sa.Date(), nullable=True),
    sa.Column('Description', sa.String(), nullable=True),
    sa.Column('Story', sa.Text(), nullable=True),
    sa.Column('LinkReference', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['NationalCertificationId'], ['APMSNationalCertification.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['UserId'], ['APMSUser.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('APMSEducation',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('UserId', sa.UUID(), nullable=True),
    sa.Column('CourseId', sa.Integer(), nullable=True),
    sa.Column('Level', sa.String(), nullable=True),
    sa.Column('SchoolName', sa.String(), nullable=True),
    sa.Column('Story', sa.Text(), nullable=True),
    sa.Column('IsInternational', sa.Boolean(), server_default='False', nullable=False),
    sa.Column('Address', sa.String(), nullable=True),
    sa.Column('Country', sa.String(), server_default='philippines', nullable=True),
    sa.Column('Region', sa.String(), nullable=True),
    sa.Column('City', sa.String(), nullable=True),
    sa.Column('RegionCode', sa.String(), nullable=True),
    sa.Column('CityCode', sa.String(), nullable=True),
    sa.Column('DateStart', sa.Date(), nullable=True),
    sa.Column('DateGraduated', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['CourseId'], ['SPSCourse.CourseId'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['UserId'], ['APMSUser.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('APMSEmployment',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('UserId', sa.UUID(), nullable=True),
    sa.Column('AlignedWithAcademicProgram', sa.Boolean(), server_default='False', nullable=False),
    sa.Column('JobId', sa.UUID(), nullable=True),
    sa.Column('CompanyName', sa.String(), nullable=True),
    sa.Column('DateHired', sa.Date(), nullable=True),
    sa.Column('DateEnd', sa.Date(), nullable=True),
    sa.Column('FindingJobMeans', sa.String(), nullable=True),
    sa.Column('GrossMonthlyIncome', sa.String(), nullable=True),
    sa.Column('EmploymentContract', sa.String(), nullable=True),
    sa.Column('JobPosition', sa.String(), nullable=True),
    sa.Column('EmployerType', sa.String(), nullable=True),
    sa.Column('IsInternational', sa.Boolean(), server_default='False', nullable=False),
    sa.Column('Address', sa.String(), nullable=True),
    sa.Column('Country', sa.String(), server_default='philippines', nullable=True),
    sa.Column('Region', sa.String(), nullable=True),
    sa.Column('City', sa.String(), nullable=True),
    sa.Column('RegionCode', sa.String(), nullable=True),
    sa.Column('CityCode', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['JobId'], ['APMSJob.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['UserId'], ['APMSUser.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_APMSEmployment_DateHired'), 'APMSEmployment', ['DateHired'], unique=False)
    op.create_table('APMSPost',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('Title', sa.String(), nullable=True),
    sa.Column('Content', sa.Text(), nullable=True),
    sa.Column('PostType', sa.String(), nullable=True),
    sa.Column('ImgLink', sa.String(), nullable=True),
    sa.Column('UploaderId', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['UploaderId'], ['APMSUser.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('APMSUploadHistory',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('Type', sa.String(), nullable=True),
    sa.Column('Link', sa.String(), nullable=True),
    sa.Column('UserId', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['UserId'], ['APMSUser.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('APMSAnnouncement',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['APMSPost.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('APMSEvent',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('ContentDate', sa.Date(), nullable=True),
    sa.Column('EndDate', sa.Date(), nullable=True),
    sa.Column('InterestedCount', sa.Integer(), server_default='0', nullable=True),
    sa.ForeignKeyConstraint(['id'], ['APMSPost.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('APMSFundraising',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('GoalAmount', sa.Integer(), nullable=True),
    sa.Column('TotalCollected', sa.Integer(), server_default='0', nullable=True),
    sa.Column('Fulfilled', sa.Boolean(), server_default='False', nullable=False),
    sa.Column('DonorsCount', sa.Integer(), server_default='0', nullable=True),
    sa.ForeignKeyConstraint(['id'], ['APMSPost.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('APMSNews',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['APMSPost.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('APMSDonation',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('UserId', sa.UUID(), nullable=True),
    sa.Column('ApproverId', sa.UUID(), nullable=True),
    sa.Column('FundraisingId', sa.UUID(), nullable=True),
    sa.Column('Comment', sa.Text(), nullable=True),
    sa.Column('ProofOfDonation', sa.String(), nullable=True),
    sa.Column('DonationAmount', sa.Integer(), server_default='0', nullable=True),
    sa.Column('approved_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['ApproverId'], ['APMSUser.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['FundraisingId'], ['APMSFundraising.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['UserId'], ['APMSUser.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('APMSUserInterestEvent',
    sa.Column('UserId', sa.UUID(), nullable=False),
    sa.Column('EventId', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['EventId'], ['APMSEvent.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['UserId'], ['APMSUser.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('UserId', 'EventId')
    )

def downgrade() -> None:

    op.drop_table('APMSUserInterestEvent')
    op.drop_table('APMSDonation')
    op.drop_table('APMSNews')
    op.drop_table('APMSFundraising')
    op.drop_table('APMSEvent')
    op.drop_table('APMSAnnouncement')
    op.drop_table('APMSUploadHistory')
    op.drop_table('APMSPost')
    op.drop_index(op.f('ix_APMSEmployment_DateHired'), table_name='APMSEmployment')
    op.drop_table('APMSEmployment')
    op.drop_table('APMSEducation')
    op.drop_table('APMSAchievement')
    op.drop_index(op.f('ix_APMSUser_Username'), table_name='APMSUser')
    op.drop_index(op.f('ix_APMSUser_Sub'), table_name='APMSUser')
    op.drop_index(op.f('ix_APMSUser_StudentNumber'), table_name='APMSUser')
    op.drop_index(op.f('ix_APMSUser_Role'), table_name='APMSUser')
    op.drop_index(op.f('ix_APMSUser_Email'), table_name='APMSUser')
    op.drop_table('APMSUser')
    op.drop_table('APMSNationalCertificationClassification')
    op.drop_table('APMSJobClassification')
    op.drop_table('APMSCourseClassification')
    op.drop_table('APMSNationalCertification')
    op.drop_index(op.f('ix_APMSJob_Name'), table_name='APMSJob')
    op.drop_table('APMSJob')
    op.drop_index(op.f('ix_APMSClassification_Name'), table_name='APMSClassification')
    op.drop_index(op.f('ix_APMSClassification_Code'), table_name='APMSClassification')
    op.drop_table('APMSClassification')
    # ### end Alembic commands ###
