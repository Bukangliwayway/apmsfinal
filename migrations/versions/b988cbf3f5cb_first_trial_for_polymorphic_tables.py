"""first trial for polymorphic tables

Revision ID: b988cbf3f5cb
Revises: 72853b6cb381
Create Date: 2024-01-03 08:02:19.628065

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b988cbf3f5cb'
down_revision: Union[str, None] = '72853b6cb381'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('post',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('post_type', sa.String(), nullable=True),
    sa.Column('supporting_link', sa.String(), nullable=True),
    sa.Column('img_link', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('event',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('event_date', sa.Date(), nullable=True),
    sa.Column('interested_count', sa.Integer(), server_default='0', nullable=True),
    sa.ForeignKeyConstraint(['id'], ['post.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('fundraising',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('goal_amount', sa.Integer(), nullable=True),
    sa.Column('total_collected', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('fulfilled', sa.Boolean(), server_default='False', nullable=False),
    sa.Column('donors_count', sa.Integer(), server_default='0', nullable=True),
    sa.ForeignKeyConstraint(['id'], ['post.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('fundraising_donation',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('fundraising_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('donation_amount', sa.Integer(), server_default='0', nullable=True),
    sa.Column('approved_by_user_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('approved_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['approved_by_user_id'], ['user.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['fundraising_id'], ['fundraising.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_interest_event',
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('event_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'event_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_interest_event')
    op.drop_table('fundraising_donation')
    op.drop_table('fundraising')
    op.drop_table('event')
    op.drop_table('post')
    # ### end Alembic commands ###
