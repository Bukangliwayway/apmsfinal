"""interestevent2

Revision ID: 538cda0b42c2
Revises: cd3d15407db6
Create Date: 2024-02-21 10:49:23.201108

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '538cda0b42c2'
down_revision: Union[str, None] = 'cd3d15407db6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('APMSUserInterestEvent', sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False))
    op.add_column('APMSUserInterestEvent', sa.Column('UserID', postgresql.UUID(as_uuid=True), nullable=True))
    op.add_column('APMSUserInterestEvent', sa.Column('EventID', postgresql.UUID(as_uuid=True), nullable=True))
    op.add_column('APMSUserInterestEvent', sa.Column('AnnouncementID', sa.Integer(), nullable=True))
    op.drop_constraint('APMSUserInterestEvent_EventId_fkey', 'APMSUserInterestEvent', type_='foreignkey')
    op.drop_constraint('APMSUserInterestEvent_UserId_fkey', 'APMSUserInterestEvent', type_='foreignkey')
    op.create_foreign_key(None, 'APMSUserInterestEvent', 'APMSPost', ['id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'APMSUserInterestEvent', 'APMSEvent', ['EventID'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'APMSUserInterestEvent', 'ESISAnnouncement', ['AnnouncementID'], ['AnnouncementId'], ondelete='CASCADE')
    op.create_foreign_key(None, 'APMSUserInterestEvent', 'APMSUser', ['UserID'], ['id'], ondelete='CASCADE')
    op.drop_column('APMSUserInterestEvent', 'UserId')
    op.drop_column('APMSUserInterestEvent', 'EventId')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('APMSUserInterestEvent', sa.Column('EventId', postgresql.UUID(), autoincrement=False, nullable=False))
    op.add_column('APMSUserInterestEvent', sa.Column('UserId', postgresql.UUID(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'APMSUserInterestEvent', type_='foreignkey')
    op.drop_constraint(None, 'APMSUserInterestEvent', type_='foreignkey')
    op.drop_constraint(None, 'APMSUserInterestEvent', type_='foreignkey')
    op.drop_constraint(None, 'APMSUserInterestEvent', type_='foreignkey')
    op.create_foreign_key('APMSUserInterestEvent_UserId_fkey', 'APMSUserInterestEvent', 'APMSUser', ['UserId'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('APMSUserInterestEvent_EventId_fkey', 'APMSUserInterestEvent', 'APMSEvent', ['EventId'], ['id'], ondelete='CASCADE')
    op.drop_column('APMSUserInterestEvent', 'AnnouncementID')
    op.drop_column('APMSUserInterestEvent', 'EventID')
    op.drop_column('APMSUserInterestEvent', 'UserID')
    op.drop_column('APMSUserInterestEvent', 'id')
    # ### end Alembic commands ###
