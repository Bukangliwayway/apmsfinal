"""additional tables for report and likes

Revision ID: a9522e608955
Revises: c5c70a00b969
Create Date: 2023-10-03 00:29:49.320852

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a9522e608955'
down_revision: Union[str, None] = 'c5c70a00b969'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('likes',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('feed_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['feed_id'], ['feeds.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reports',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('feed_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['feed_id'], ['feeds.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('employment', sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=True))
    op.drop_constraint('employment_alumni_id_fkey', 'employment', type_='foreignkey')
    op.create_foreign_key(None, 'employment', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_column('employment', 'alumni_id')
    op.add_column('feedbacks', sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=True))
    op.drop_constraint('feedbacks_alumni_id_fkey', 'feedbacks', type_='foreignkey')
    op.create_foreign_key(None, 'feedbacks', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_column('feedbacks', 'alumni_id')
    op.add_column('feeds', sa.Column('fundraising_contact', sa.String(), nullable=True))
    op.drop_constraint('feeds_user_id_fkey', 'feeds', type_='foreignkey')
    op.create_foreign_key(None, 'feeds', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.add_column('special_skills_certifications', sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=True))
    op.drop_constraint('special_skills_certifications_alumni_id_fkey', 'special_skills_certifications', type_='foreignkey')
    op.create_foreign_key(None, 'special_skills_certifications', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_column('special_skills_certifications', 'alumni_id')
    op.drop_constraint('users_academic_program_id_fkey', 'users', type_='foreignkey')
    op.create_foreign_key(None, 'users', 'academic_programs', ['academic_program_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.create_foreign_key('users_academic_program_id_fkey', 'users', 'academic_programs', ['academic_program_id'], ['id'])
    op.add_column('special_skills_certifications', sa.Column('alumni_id', postgresql.UUID(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'special_skills_certifications', type_='foreignkey')
    op.create_foreign_key('special_skills_certifications_alumni_id_fkey', 'special_skills_certifications', 'users', ['alumni_id'], ['id'], ondelete='CASCADE')
    op.drop_column('special_skills_certifications', 'user_id')
    op.drop_constraint(None, 'feeds', type_='foreignkey')
    op.create_foreign_key('feeds_user_id_fkey', 'feeds', 'users', ['user_id'], ['id'])
    op.drop_column('feeds', 'fundraising_contact')
    op.add_column('feedbacks', sa.Column('alumni_id', postgresql.UUID(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'feedbacks', type_='foreignkey')
    op.create_foreign_key('feedbacks_alumni_id_fkey', 'feedbacks', 'users', ['alumni_id'], ['id'], ondelete='CASCADE')
    op.drop_column('feedbacks', 'user_id')
    op.add_column('employment', sa.Column('alumni_id', postgresql.UUID(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'employment', type_='foreignkey')
    op.create_foreign_key('employment_alumni_id_fkey', 'employment', 'users', ['alumni_id'], ['id'], ondelete='CASCADE')
    op.drop_column('employment', 'user_id')
    op.drop_table('reports')
    op.drop_table('likes')
    # ### end Alembic commands ###
