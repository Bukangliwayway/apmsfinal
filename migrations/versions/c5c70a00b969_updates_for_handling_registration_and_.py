"""updates for handling registration and post

Revision ID: c5c70a00b969
Revises: 91bbbda14a31
Create Date: 2023-10-02 16:45:54.427893

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c5c70a00b969'
down_revision: Union[str, None] = '91bbbda14a31'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('feeds',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('feed_type', sa.String(), nullable=True),
    sa.Column('feed_category', sa.String(), nullable=True),
    sa.Column('image_attachment', sa.String(), nullable=True),
    sa.Column('likes_count', sa.Integer(), nullable=True),
    sa.Column('comments_count', sa.Integer(), nullable=True),
    sa.Column('report_count', sa.Integer(), nullable=True),
    sa.Column('content', sa.String(), nullable=True),
    sa.Column('feed_link', sa.String(), nullable=True),
    sa.Column('fundraising_goal', sa.Float(), nullable=True),
    sa.Column('fundraising_current', sa.Float(), nullable=True),
    sa.Column('interested_count', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('feed_id', sa.UUID(), nullable=True),
    sa.Column('parent_comment_id', sa.UUID(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('comment_text', sa.String(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['feed_id'], ['feeds.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['parent_comment_id'], ['comments.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('alumni_certifications')
    op.drop_table('prc_certifications')
    op.add_column('employment', sa.Column('first_job', sa.Boolean(), server_default='False', nullable=False))
    op.add_column('users', sa.Column('address', sa.String(), nullable=True))
    op.add_column('users', sa.Column('post_grad_act', sa.String(), nullable=True))
    op.drop_column('users', 'telephone_number')
    op.drop_column('users', 'district')
    op.drop_column('users', 'barangay')
    op.drop_column('users', 'region')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('region', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('barangay', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('district', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('telephone_number', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_column('users', 'post_grad_act')
    op.drop_column('users', 'address')
    op.drop_column('employment', 'first_job')
    op.create_table('prc_certifications',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('board_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('prc_title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('logo', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='prc_certifications_pkey'),
    sa.UniqueConstraint('board_name', name='prc_certifications_board_name_key'),
    sa.UniqueConstraint('prc_title', name='prc_certifications_prc_title_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('alumni_certifications',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('alumni_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('prc_certification_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('certificate_number', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('certification_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('certification_authority', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['alumni_id'], ['users.id'], name='alumni_certifications_alumni_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['prc_certification_id'], ['prc_certifications.id'], name='alumni_certifications_prc_certification_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='alumni_certifications_pkey')
    )
    op.drop_table('comments')
    op.drop_table('feeds')
    # ### end Alembic commands ###
